/* yocto-router - Manage route configuration & mapping for an express app - V2.0.1 */

"use strict";var logger=require("yocto-logger"),glob=require("glob"),_=require("lodash"),path=require("path"),joi=require("joi"),utils=require("yocto-utils"),fs=require("fs");function Router(r){this.logger=r,this.routes=process.cwd(),this.ctrl=process.cwd(),this.app=null}Router.prototype.configure=function(){var r=[];this.logger.banner("[ Router.configure ] - Initializing Router ...");try{if(!_.has(this.app,"use")||!_.isFunction(this.app.use))throw"Your app is invalid. Please ad a valid express app on your Router.app property";var e=glob.sync("*.json",{cwd:this.routes,nosort:!0,realpath:!0});_.isEmpty(e)&&this.logger.warning(["[ Router.configure ] - No routes founded on",this.routes].join(" ")),_.each(e,function(e){var o=e.replace(this.routes,"");this.logger.info(["[ Router.configure ] - Retreiving routes for [",o,"]"].join(" "));var t=JSON.parse(fs.readFileSync(e));_.isEmpty(t)?this.logger.warning(["[ Router.configure ] - Module [",o,"] doesn't have any routes.","Remove this file or add one route configuration"].join(" ")):_.each(t,function(e){var t=joi.object().min(3).max(5).keys({method:joi.string().required().empty().valid(["get","post","put","delete","options","head"]),path:joi.string().required().empty().min(1),regexp:joi.boolean().default(!1),priority:joi.number().default(100).min(0).max(999),controller:joi.object().required().min(2).max(2).keys({name:joi.string().required().empty().min(1),fn:joi.string().required().empty().min(1)}).allow("name","fn")}).allow("method","path","controller","regexp","priority");_.has(e,"error")&&(t=joi.object().min(3).max(3).keys({priority:joi.number().default(100).min(0).max(999),error:joi.number().optional().allow([404,500]),controller:joi.object().required().min(2).max(2).keys({name:joi.string().required().empty().min(1),fn:joi.string().required().empty().min(1)}).allow("name","fn")}).allow("controller","priority","error"));var i=t.validate(e);if(_.isNull(i.error)){e=i.value;var n=path.normalize([[this.ctrl,e.controller.name].join("/"),"js"].join("."));if(fs.existsSync(n)){var s=require(n);if(_.has(s,e.controller.fn)&&_.isFunction(s[e.controller.fn])){this.logger.info(["[ Router.configure ] - Adding route [",e.path||e.error,"] on a [",e.method?e.method.toUpperCase():e.error,"] HTTP Request with a callback on [",[e.controller.name,e.controller.fn].join("."),"]"].join(" ")),_.has(e,"regexp")&&e.regexp&&(e.path=new RegExp(e.path));var a=e.priority;delete e.priority,r.push({item:e,controller:s,priority:a})}else this.logger.warning(["[ Router.configure ] - Cannot find Function [",e.controller.fn,"] for controller [",e.controller.name,"] on [",n,"]. Operation Aborted"].join(" "))}else this.logger.warning(["[ Router.configure ] - Given endpoint controller [",e.controller.name,"] for route [",o,"] is invalid. Path [",n,"] is not found. Operation Aborted !"].join(" "))}else _.each(i.error.details,function(r){this.logger.warning(["[ Router.configure ] - Cannot add route for",o,"config given is invalid. Error is :",utils.obj.inspect(r)].join(" "))}.bind(this))}.bind(this))}.bind(this))}catch(r){return this.logger.error(["[ Router.configure ] - An Error occured during routes initialization.","error is :",r,"Operation aborted !"].join(" ")),!1}return this.addRoute(r)},Router.prototype.addRoute=function(r){return r.length>0?(r=_.sortBy(r,function(r){return this.min(r.priority)}.bind(Math)),_.each(r,function(r){_.has(r.item,"error")?this.app.use(r.controller[r.item.controller.fn].bind(this.app)):this.app[r.item.method](r.item.path,r.controller[r.item.controller.fn].bind(this.app))}.bind(this)),this.logger.info(["[ Router.addRoute ] -",r.length,r.length<2?"route":"routes","was added on current app"].join(" "))):this.logger.warning("[ Router.addRoute ] - No routes to add."),!0},Router.prototype.setRoutes=function(r){return this.set("routes",r)},Router.prototype.setEndPoint=function(r){return this.set("ctrl",r)},Router.prototype.useApp=function(r){return this.set("app",r)},Router.prototype.set=function(r,e){if(_.isUndefined(r)||!_.isString(r)||_.isEmpty(r))return this.logger.warning(["[ Router.set ] - Invalid value given.","name must be a string and not empty. Operation aborted !"].join(" ")),!1;if(("routes"===r||"ctrl"===r)&&!path.isAbsolute(e)){e=path.normalize([process.cwd(),e].join("/"));try{if(!fs.statSync(e).isDirectory())throw["Path is not a directory for :",r].join(" ")}catch(r){return this.logger.warning(["[ Router.set ] - given value is not a directory : ",r].join(" ")),!1}}return this[r]=e,!0},module.exports=function(r){return(_.isUndefined(r)||_.isNull(r))&&(logger.warning("[ Router.constructor ] - Invalid logger given. Use internal logger"),r=logger),new Router(r)};