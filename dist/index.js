/* yocto-router - Manage route configuration & mapping for an express app - V1.2.0 */
"use strict";function Router(a){this.logger=a,this.routes=process.cwd(),this.ctrl=process.cwd(),this.app=null}var logger=require("yocto-logger"),glob=require("glob"),_=require("lodash"),path=require("path"),joi=require("joi"),utils=require("yocto-utils"),fs=require("fs");Router.prototype.configure=function(){var a=[];this.logger.banner("[ Router.configure ] - Initializing Router ...");try{if(!_.has(this.app,"use")||!_.isFunction(this.app.use))throw"Your app is invalid. Please ad a valid express app on your Router.app property";var b=glob.sync("*.json",{cwd:this.routes,nosort:!0,realpath:!0});_.isEmpty(b)&&this.logger.warning(["[ Router.configure ] - No routes founded on",this.routes].join(" ")),_.each(b,function(b){var c=b.replace(this.routes,"");this.logger.info(["[ Router.configure ] - Retreiving routes for [",c,"]"].join(" "));var d=JSON.parse(fs.readFileSync(b));_.isEmpty(d)?this.logger.warning(["[ Router.configure ] - Module [",c,"] doesn't have any routes.","Remove this file or add one route configuration"].join(" ")):_.each(d,function(b){var d=joi.object().min(3).max(5).keys({method:joi.string().required().empty().valid(["get","post","put","delete","options","head"]),path:joi.string().required().empty().min(1),regexp:joi["boolean"]()["default"](!1),priority:joi.number()["default"](100).min(0).max(999),controller:joi.object().required().min(2).max(2).keys({name:joi.string().required().empty().min(1),fn:joi.string().required().empty().min(1)}).allow("name","fn")}).allow("method","path","controller","regexp","priority");_.has(b,"error")&&(d=joi.object().min(3).max(3).keys({priority:joi.number()["default"](100).min(0).max(999),error:joi.number().optional().allow([404,500]),controller:joi.object().required().min(2).max(2).keys({name:joi.string().required().empty().min(1),fn:joi.string().required().empty().min(1)}).allow("name","fn")}).allow("controller","priority","error"));var e=d.validate(b);if(_.isNull(e.error)){b=e.value;var f=path.normalize([[this.ctrl,b.controller.name].join("/"),"js"].join("."));if(fs.existsSync(f)){var g=require(f);if(_.has(g,b.controller.fn)&&_.isFunction(g[b.controller.fn])){this.logger.info(["[ Router.configure ] - Adding route [",b.path||b.error,"] on a [",b.method?b.method.toUpperCase():b.error,"] HTTP Request with a callback on [",[b.controller.name,b.controller.fn].join("."),"]"].join(" ")),_.has(b,"regexp")&&b.regexp&&(b.path=new RegExp(b.path));var h=b.priority;delete b.priority,a.push({item:b,controller:g,priority:h})}else this.logger.warning(["[ Router.configure ] - Cannot find Function [",b.controller.fn,"] for controller [",b.controller.name,"] on [",f,"]. Operation Aborted"].join(" "))}else this.logger.warning(["[ Router.configure ] - Given endpoint controller [",b.controller.name,"] for route [",c,"] is invalid. Path [",f,"] is not found. Operation Aborted !"].join(" "))}else _.each(e.error.details,function(a){this.logger.warning(["[ Router.configure ] - Cannot add route for",c,"config given is invalid. Error is :",utils.obj.inspect(a)].join(" "))},this)},this)},this)}catch(c){return this.logger.error(["[ Router.configure ] - An Error occured during routes initialization.","error is :",c,"Operation aborted !"].join(" ")),!1}return this.addRoute(a)},Router.prototype.addRoute=function(a){return a.length>0?(a=_.sortBy(a,function(a){return this.min(a.priority)},Math),_.each(a,function(a){_.has(a.item,"error")?this.app.use(a.controller[a.item.controller.fn].bind(this.app)):this.app[a.item.method].call(this.app,a.item.path,a.controller[a.item.controller.fn].bind(this.app))},this),this.logger.info(["[ Router.addRoute ] -",a.length,a.length<2?"route":"routes","was added on current app"].join(" ")),!0):(this.logger.warning("[ Router.addRoute ] - No routes to add."),!1)},Router.prototype.setRoutes=function(a){return this.set("routes",a)},Router.prototype.setEndPoint=function(a){return this.set("ctrl",a)},Router.prototype.useApp=function(a){return this.set("app",a)},Router.prototype.set=function(a,b){if(_.isUndefined(a)||!_.isString(a)||_.isEmpty(a))return this.logger.warning(["[ Router.set ] - Invalid value given.","name must be a string and not empty. Operation aborted !"].join(" ")),!1;if(("routes"===a||"ctrl"===a)&&!path.isAbsolute(b)){b=path.normalize([process.cwd(),b].join("/"));try{var c=fs.statSync(b);if(!c.isDirectory())throw["Path is not a directory for :",a].join(" ")}catch(d){return this.logger.warning(["[ Router.set ] - given value is not a directory : ",d].join(" ")),!1}}return this[a]=b,!0},module.exports=function(a){return(_.isUndefined(a)||_.isNull(a))&&(logger.warning("[ Router.constructor ] - Invalid logger given. Use internal logger"),a=logger),new Router(a)};